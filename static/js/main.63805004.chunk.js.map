{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","frameWidth","itemWidth","step","animationDuration","infinite","useState","position","setPosition","maxPosition","length","className","style","width","map","image","transform","transition","src","height","alt","type","onClick","App","setItemWidth","setFrameWidth","setStep","setAnimationDuration","setInfinite","htmlFor","id","min","max","value","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"mMA2FeA,EA/EmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,WACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAcP,GAAaF,EAAOU,OAAST,GAsBjD,OACE,sBAAKU,UAAU,WAAf,UACE,oBACEA,UAAU,iBACVC,MAAO,CACLC,MAAM,GAAD,OAAKZ,EAAaC,EAAlB,OAHT,SAMGF,EAAOc,KAAI,SAACC,GAAD,OACV,oBAEEJ,UAAU,iBACVC,MAAO,CACLI,UAAU,eAAD,OAAiBT,EAAjB,OACTU,WAAW,GAAD,OAAKb,EAAL,OALd,SAQE,qBACEc,IAAG,UAAKH,GACRH,MAAO,CACLC,MAAM,GAAD,OAAKX,EAAL,MACLiB,OAAO,GAAD,OAAiB,KAAZjB,EAAL,OAERkB,IAAI,GACJT,UAAU,kBAdPI,QAoBX,wBACEM,KAAK,SACLC,QA1Ca,YACbjB,GAAYE,EAAW,IAEvBC,EADED,EAAWJ,EAAOD,EAAY,GAAKG,EACzBI,EAEAF,EAAWJ,EAAOD,IAmChC,kBAOA,wBACEmB,KAAK,SACLC,QA3Da,YACbjB,GAAYE,EAAWE,IAEvBD,EADED,EAAWJ,EAAOD,EAAYO,GAAeJ,EACnC,EAEAE,EAAWJ,EAAOD,IAoDhC,sBC7EAF,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGWuB,EAAgB,WAC3B,MAAkCjB,mBAAiB,KAAnD,mBAAOJ,EAAP,KAAkBsB,EAAlB,KACA,EAAoClB,mBAAS,GAA7C,mBAAOL,EAAP,KAAmBwB,EAAnB,KACA,EAAwBnB,mBAAS,GAAjC,mBAAOH,EAAP,KAAauB,EAAb,KACA,EAAkDpB,mBAAS,KAA3D,mBAAOF,EAAP,KAA0BuB,EAA1B,KACA,EAAgCrB,oBAAS,GAAzC,mBAAOD,EAAP,KAAiBuB,EAAjB,KAoBA,OACE,sBAAKjB,UAAU,MAAf,UAGE,qBACE,UAAQ,QADV,0BAIGX,EAAOU,OACP,IALH,YAQA,uBAAOmB,QAAQ,YAAf,uBACA,uBACEC,GAAG,YACHT,KAAK,SACLU,IAAK,IACLC,IAAK,IACLC,MAAO/B,EAEPgC,SAtCmB,SAACC,GACxBX,GAAcW,EAAMC,OAAOH,UAwCzB,uBAAOJ,QAAQ,aAAf,wBACA,uBACEC,GAAG,aACHT,KAAK,SACLU,IAAK,EACLC,IAAK,GACLC,MAAOhC,EACPiC,SA5CoB,SAACC,GACzBV,GAAeU,EAAMC,OAAOH,UA8C1B,uBAAOJ,QAAQ,OAAf,kBACA,uBACEC,GAAG,OACHT,KAAK,SACLU,IAAK,EACLC,IAAK,GACLC,MAAO9B,EACP+B,SAlDmB,SAACC,GACxBT,GAASS,EAAMC,OAAOH,UAmDpB,uBAAOJ,QAAQ,YAAf,gCACA,uBACEC,GAAG,YACHT,KAAK,SACLU,IAAK,IACLC,IAAK,IACLC,MAAO7B,EACP8B,SAvDwB,SAC5BC,GAEAR,GAAsBQ,EAAMC,OAAOH,UAuDjC,uBAAOJ,QAAQ,WAAf,sBACA,uBACEC,GAAG,WACHT,KAAK,WACLgB,QAAShC,EACT6B,SAAU,kBAAMN,GAAavB,MAG/B,cAAC,EAAD,CACEL,OAAQA,EACRE,UAAWA,EACXD,WAAYA,EACZE,KAAMA,EACNC,kBAAmBA,EACnBC,SAAUA,QCzGlBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.63805004.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  frameWidth: number;\n  itemWidth: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  frameWidth,\n  itemWidth,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [position, setPosition] = useState(0);\n\n  const maxPosition = itemWidth * (images.length - frameWidth);\n\n  const nextButton = () => {\n    if (infinite || position < maxPosition) {\n      if (position + step * itemWidth > maxPosition && infinite) {\n        setPosition(0);\n      } else {\n        setPosition(position + step * itemWidth);\n      }\n    }\n  };\n\n  const prevButton = () => {\n    if (infinite || position > 0) {\n      if (position - step * itemWidth < 0 && infinite) {\n        setPosition(maxPosition);\n      } else {\n        setPosition(position - step * itemWidth);\n      }\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${frameWidth * itemWidth}px`,\n        }}\n      >\n        {images.map((image) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(-${position}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={`${image}`}\n              style={{\n                width: `${itemWidth}px`,\n                height: `${itemWidth * 1.05}px`,\n              }}\n              alt=\"\"\n              className=\"Carousel-img\"\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={prevButton}\n\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        onClick={nextButton}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState<number>(130);\n  const [frameWidth, setFrameWidth] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  const handleItemChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setItemWidth(+event.target.value);\n  };\n\n  const handleFrameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFrameWidth(+event.target.value);\n  };\n\n  const handleStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStep(+event.target.value);\n  };\n\n  const handleAnimationChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setAnimationDuration(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n\n      <h1\n        data-cy=\"title\"\n      >\n        Carousel with\n        {images.length}\n        {' '}\n        images\n      </h1>\n      <label htmlFor=\"itemWidth\">itemWidth</label>\n      <input\n        id=\"itemWidth\"\n        type=\"number\"\n        min={130}\n        max={260}\n        value={itemWidth}\n        // onChange={() => setItemWidth()}\n        onChange={handleItemChange}\n      />\n\n      <label htmlFor=\"frameWidth\">frameWidth</label>\n      <input\n        id=\"frameWidth\"\n        type=\"number\"\n        min={1}\n        max={10}\n        value={frameWidth}\n        onChange={handleFrameChange}\n      />\n\n      <label htmlFor=\"step\">Step</label>\n      <input\n        id=\"step\"\n        type=\"number\"\n        min={1}\n        max={10}\n        value={step}\n        onChange={handleStepChange}\n      />\n      <label htmlFor=\"animation\">Animation duration</label>\n      <input\n        id=\"animation\"\n        type=\"number\"\n        min={500}\n        max={3000}\n        value={animationDuration}\n        onChange={handleAnimationChange}\n      />\n\n      <label htmlFor=\"infinite\">Infinite</label>\n      <input\n        id=\"infinite\"\n        type=\"checkbox\"\n        checked={infinite}\n        onChange={() => setInfinite(!infinite)}\n      />\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameWidth={frameWidth}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}